<?xml version="1.0" encoding="UTF-8"?>
<project name="phing-drupal-module" default="build" phingVersion="2.4.11">
  <target name="build" depends="clean,prepare,lint,check-debug,analyze" description="Check PHP, JS, and CSS for syntax errors, perform static code analysis" />

  <target name="clean">
    <delete dir="${project.basedir}/build" />
  </target>

  <target name="prepare">
    <mkdir dir="${project.basedir}/build" />

    <taskdef name="phploc" classname="PHPLocTask" classpath="/opt/phploctask" />

    <patternset id="php">
      <include name="**/*.php" />
      <include name="**/*.module" />
      <include name="**/*.install" />
      <include name="**/*.inc" />
      <include name="**/*.profile" />
      <include name="**/*.test" />
    </patternset>

    <patternset id="generated">
      <exclude name="**/*.features.*" />
      <exclude name="**/*.field_group.inc" />
      <exclude name="**/*.layouts.inc" />
      <exclude name="**/*.pages_default.inc" />
      <exclude name="**/*.panelizer.inc" />
      <exclude name="**/*.panels_default.inc" />
      <exclude name="**/*.strongarm.inc" />
      <exclude name="**/*.views_default.inc" />
    </patternset>

    <patternset id="js">
      <include name="**/*.js" />
      <exclude name="**/*.min.js" />
    </patternset>

    <patternset id="css">
      <include name="**/*.css" />
    </patternset>

    <fileset id="src.php" dir="${project.basedir}">
      <patternset refid="php"/>
      <patternset refid="generated"/>
    </fileset>

    <fileset id="src.js" dir="${project.basedir}">
      <patternset refid="js" />
    </fileset>

    <fileset id="src.css" dir="${project.basedir}">
      <patternset refid="css" />
    </fileset>
  </target>

  <target name="lint" depends="lint-php,lint-js,lint-css" />

  <target name="lint-php" depends="prepare">
    <phplint haltonfailure="true">
      <fileset refid="src.php" />
    </phplint>
  </target>

  <target name="lint-js" depends="prepare">
    <foreach target="lint-js-file" param="filename" absparam="absfilename">
      <fileset refid="src.js" />
    </foreach>
  </target>

  <target name="lint-js-file">
    <echo>Linting JS file: ${absfilename}</echo>
    <exec command="jshint --reporter=checkstyle ${absfilename}" outputProperty="report" />
    <php function="str_replace" returnProperty="filename.normalized">
      <param value="/" />
      <param value="-" />
      <param value="${filename}" />
    </php>
    <if>
      <available file="${project.basedir}/build/checkstyle-jslint-${filename.normalized}.xml" />
      <then>
        <delete file="${project.basedir}/build/checkstyle-jslint-${filename.normalized}.xml" />
      </then>
    </if>
    <append text="${report}" destFile="${project.basedir}/build/checkstyle-jslint-${filename.normalized}.xml" />
  </target>

  <target name="lint-css" depends="prepare">
    <foreach target="lint-css-file" param="filename" absparam="absfilename">
      <fileset refid="src.css" />
    </foreach>
  </target>

  <target name="lint-css-file">
    <echo>Linting CSS file: ${absfilename}</echo>
    <exec command="csslint --format=checkstyle-xml --rules=display-property-grouping,duplicate-properties,empty-rules,known-properties,box-sizing,compatible-vendor-prefixes,gradients,vendor-prefix,import,zero-units,shorthand,important ${absfilename}" outputProperty="report" />
    <php function="str_replace" returnProperty="filename.normalized">
      <param value="/" />
      <param value="-" />
      <param value="${filename}" />
    </php>
    <if>
      <available file="${project.basedir}/build/checkstyle-csslint-${filename.normalized}.xml" />
      <then>
        <delete file="${project.basedir}/build/checkstyle-csslint-${filename.normalized}.xml" />
      </then>
    </if>
    <append text="${report}" destFile="${project.basedir}/build/checkstyle-csslint-${filename.normalized}.xml" />
  </target>

  <target name="check-debug" depends="check-debug-php,check-debug-js" />

  <target name="check-debug-php" depends="prepare">
    <phingcall target="check-debug-fileset">
      <property name="debug.language" value="PHP" override="true" />
      <property name="debug.pattern" value="(var_dump\(|dsm\(|dpm\()" override="true" />
      <property name="debug.fileset" value="src.php" />
    </phingcall>
  </target>

  <target name="check-debug-js" depends="prepare">
    <phingcall target="check-debug-fileset">
      <property name="debug.language" value="JavaScript" override="true" />
      <property name="debug.pattern" value="(console\.log\()" override="true" />
      <property name="debug.fileset" value="src.js" />
    </phingcall>
  </target>

  <target name="check-debug-fileset" depends="prepare">
    <php function="strtolower" returnProperty="debug.language.lower">
      <param value="${debug.language}" />
    </php>
    <property name="debug.output" value="${project.basedir}/build/debug_${debug.language.lower}.txt" override="true" />

    <if>
      <available file="${debug.output}" />
      <then>
        <delete file="${debug.output}" />
      </then>
    </if>
    <append text="" destFile="${debug.output}" />

    <foreach target="check-debug-file" param="filename" absparam="absfilename">
      <fileset refid="${debug.fileset}" />
    </foreach>

    <loadfile property="debug.lines" file="${debug.output}" />
    <if>
      <not>
        <equals arg1="${debug.lines}" arg2="" />
      </not>
      <then>
        <fail message="${debug.language} debug code detected:${line.separator}${debug.lines}" />
      </then>
    </if>
  </target>

  <target name="check-debug-file">
    <echo>Checking file for debug statements: ${absfilename}</echo>
    <loadfile property="debug.lines" file="${absfilename}">
      <filterchain>
        <linecontainsregexp>
          <regexp pattern="${debug.pattern}" />
        </linecontainsregexp>
      </filterchain>
    </loadfile>
    <if>
      <not>
        <equals arg1="${debug.lines}" arg2="" />
      </not>
      <then>
        <append text="${filename}:${line.separator}  ${debug.lines}${line.separator}${line.separator}" destFile="${debug.output}" />
      </then>
    </if>
  </target>

  <target name="analyze" depends="analyze-phploc,analyze-phpmd,analyze-phpcpd,analyze-phpcs" />

  <target name="analyze-phploc" depends="prepare">
    <phploc reportType="csv" reportName="phploc" reportDirectory="${project.basedir}/build" suffixes="php,module,inc,install,profile,test" countTests="true">
      <fileset refid="src.php" />
    </phploc>
  </target>

  <target name="analyze-phpmd" depends="prepare">
    <phpmd rulesets="codesize,naming,design">
      <fileset refid="src.php" />
      <formatter type="xml" outfile="${project.basedir}/build/pmd.xml" />
    </phpmd>
  </target>

  <target name="analyze-phpcpd" depends="prepare">
    <phpcpd>
      <fileset refid="src.php" />
      <formatter type="pmd" outfile="${project.basedir}/build/pmd-cpd.xml" />
    </phpcpd>
  </target>

  <target name="analyze-phpcs" depends="prepare">
    <exec command="phpcs --report=checkstyle --report-file=${project.basedir}/build/checkstyle-codesniffer.xml --standard=Drupal --extensions=php,module,install,inc,profile,test --ignore=*/contrib/*,*/development/*,*.features.*,*.field_group.*,*.layouts.*,*.pages_default.*,*.panelizer.*,*.panels_default.*,*.strongarm.*,*.views_default.* ${project.basedir}" logoutput="true" />
  </target>
</project>
